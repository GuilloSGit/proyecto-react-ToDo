{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","classes","makeStyles","listOfTasks","userSelect","listStyleType","fontSize","color","margin","checkbox","border","marginRight","transform","useStyle","className","type","checked","onChange","TodoList","todos","listOfItems","minHeight","minWidth","padding","borderRadius","backgroundColor","useStyles","map","mainContainer","fontFamily","display","flexDirection","flexWrap","justifyContent","alignItems","width","maxWidth","addAndDeleteButton","inputTasks","lineHeight","textAlign","borderBottom","letterSpacing","paddingLeft","msgTasks","numOfTasks","boxShadow","divTareas","label","marginBottom","fontWeight","alignSelf","button","background","cursor","App","useState","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","handleTodoAdd","current","value","prevTodos","uuidv4","handleClearAll","filter","length","src","alt","for","ref","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbc4692b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport function TodoItem({ todo, toggleTodo }) {\r\n    \r\n    const { id, task, completed } = todo;\r\n    \r\n    const useStyle = makeStyles({\r\n        listOfTasks:{\r\n            userSelect:\"none\",\r\n            listStyleType:\"none\",\r\n            fontSize:\".9rem\",\r\n            color:\"white\",\r\n            margin:\"10px\",\r\n        },\r\n        checkbox:{\r\n            border:\"none\",\r\n            marginRight:\"3ch\",\r\n            transform:\"scale(1.5)\",\r\n        },\r\n    });\r\n    \r\n    const classes = useStyle();\r\n\r\n    const handleTodoClick = () => {\r\n        toggleTodo(id);\r\n    }\r\n\r\n    return (\r\n        <li className={classes.listOfTasks}>\r\n            <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} className={classes.checkbox}/>\r\n            {task}\r\n        </li>);\r\n}\r\n","import React from 'react';\r\nimport { TodoItem } from './TodoItem';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nexport function TodoList({todos, toggleTodo}) {\r\n\r\n    const useStyles = makeStyles ({\r\n        listOfItems:{\r\n            minHeight:\"35px\",\r\n            minWidth:\"80%\",\r\n            margin:\"20px\",\r\n            padding:\"5px\",\r\n            borderRadius:\"15px\",\r\n            border:\"none\",\r\n            backgroundColor:\"rgba(13, 13, 13, 0.65)\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ul className={classes.listOfItems}>\r\n            {todos.map((todo) => (\r\n                <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n","import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { TodoList } from \"./components/TodoList\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyle = makeStyles({\r\n    mainContainer: {\r\n        fontFamily:\"sans-serif\",\r\n        color:\"white\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        flexWrap:\"nowrap\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor:\"rgba(3, 3, 0, 0.696)\",\r\n        borderRadius:\"20px\",\r\n        width:\"95%\",\r\n        maxWidth:\"700px\",\r\n        minHeight:\"90%\",\r\n    },\r\n    addAndDeleteButton: {\r\n        backgroundColor:\"none\",\r\n        margin:\"20px\",\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n    },\r\n    inputTasks:{\r\n        width:\"80%\",\r\n        lineHeight:\"2rem\",\r\n        textAlign:\"left\",\r\n        backgroundColor:\"transparent\",\r\n        border:\"none\",\r\n        borderBottom:\"white solid\",\r\n        color:\"white\",\r\n        letterSpacing:\"2px\",\r\n        paddingLeft:\"25px\",\r\n        \"&:hover\":{\r\n            backgroundColor:\"rgba(13, 13, 13, 0.65)\",\r\n        },\r\n        \"&:onfocus\":{\r\n            backgroundColor:\"rgba(13, 13, 13, 0.65)\",\r\n            border:\"none\",\r\n        }\r\n    },\r\n    msgTasks:{\r\n        margin:\"10px\",\r\n        textAlign:\"center\",\r\n        lineHeight:\"1.8rem\",\r\n        fontSize:\"20px\"\r\n    },\r\n    numOfTasks:{\r\n        backgroundColor:\"rgba(13, 13, 13, 0.65)\",\r\n        padding:\"14px\",\r\n        margin:\"10px\",\r\n        boxShadow:\"inset -3px -3px rgba(13, 13, 13, 0.965)\",\r\n    },\r\n    divTareas:{\r\n        minWidth:\"85%\",\r\n        margin:\"35px\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"center\",\r\n    },\r\n    label:{\r\n        userSelect:\"none\",\r\n        marginBottom:\"10px\",\r\n        display:\"inline-block\",\r\n        fontWeight:\"600\",\r\n        color:\"white\",\r\n        fontSize:\"1rem\",\r\n        alignSelf:\"left\",\r\n    },\r\n    button:{\r\n        background:\"rgba(13, 13, 13, 0.65)\",\r\n        padding:\"10px\",\r\n        border:\"none\",\r\n        margin:\"10px\",\r\n        fontSize:\"25px\",\r\n        borderRadius:\"20px\",\r\n        boxShadow:\"inset -3px -3px rgba(83, 83, 83, 0.95)\",\r\n        \"&:hover\":{\r\n            cursor:\"pointer\",\r\n            boxShadow:\"inset -2px -2px rgba(123, 123, 123, 0.95)\",\r\n        }\r\n    }\r\n});\r\n\r\nconst KEY = 'todoApp.todos';\r\n\r\nexport function App(){\r\n\r\n    const classes = useStyle();\r\n\r\n    const [todos, setTodos] = useState([ \r\n        { id:0, task: \"No tienes tareas\", completed: true },\r\n    ]);\r\n\r\n    const todoTaskRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const storedTodos = JSON.parse(localStorage.getItem(KEY));\r\n        if(storedTodos) {\r\n            setTodos(storedTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todoApp.todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const toggleTodo = (id) => {\r\n        const newTodos = [...todos];\r\n        const todo = newTodos.find((todo) => todo.id === id);\r\n        todo.completed = !todo.completed;\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const handleTodoAdd = () => {\r\n        const task = todoTaskRef.current.value;\r\n        if(task === '') return;\r\n        \r\n        setTodos((prevTodos) => {\r\n            return [...prevTodos, {id:uuidv4(), task, completed:false}]\r\n        });\r\n\r\n        todoTaskRef.current.value = null;\r\n    };\r\n\r\n    const handleClearAll = () => {\r\n        const newTodos = todos.filter((todo) => !todo.completed);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n            {todos.filter((todo) => !todo.completed).length === 0\r\n            \r\n            ? <div className={classes.mainContainer}>\r\n            \r\n                <TodoList todos={ todos }  toggleTodo={toggleTodo} className={classes.listOfTasks}/>\r\n                <div>No tienes tareas pendientes</div>\r\n                <img src=\"../unnamed.gif\" alt=\"Aplausos\" width=\"75px\"/>\r\n                <br/>\r\n                <div className={classes.divTareas}>\r\n                    <label for=\"tareas\" className={classes.label}>Agregar tarea</label>\r\n                    <input ref={todoTaskRef} type=\"text\" className={classes.inputTasks}/>\r\n                </div>\r\n                <div className={classes.addAndDeleteButton}>\r\n                    <button onClick={handleTodoAdd} className={classes.button}>➕</button>\r\n                    <button onClick={handleClearAll} className={classes.button}>🗑️</button>\r\n                </div>\r\n                <div className={classes.msgTasks}>Te queda(n) <span className={classes.numOfTasks}>\r\n                {todos.filter((todo) => !todo.completed).length}</span> tarea(s) pendientes</div>\r\n             </div>\r\n            \r\n            : <div className={classes.mainContainer}>\r\n                <TodoList todos={ todos }  toggleTodo={toggleTodo} className={classes.listOfTasks}/>\r\n                <div className={classes.divTareas}>\r\n                    <label for=\"tareas\" className={classes.label}>Agregar tarea</label>\r\n                    <input ref={todoTaskRef} type=\"text\" className={classes.inputTasks}/>\r\n                </div>\r\n                <div className={classes.addAndDeleteButton}>\r\n                    <button onClick={handleTodoAdd} className={classes.button}>➕</button>\r\n                    <button onClick={handleClearAll} className={classes.button}>🗑️</button>\r\n                </div>\r\n                <div className={classes.msgTasks}>Te queda(n) <span className={classes.numOfTasks}>\r\n                {todos.filter((todo) => !todo.completed).length}</span> tarea(s) pendientes</div>\r\n            </div>}\r\n            \r\n        </Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from './App.jsx';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}